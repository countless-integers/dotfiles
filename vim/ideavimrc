set modeline                  " so it'll read the next line
" vim: foldmethod=marker foldlevel=0

set nocompatible              " be iMproved

"=====================[ Behaviour ]===================== {{{1
syntax on
syntax enable

set clipboard=unnamedplus,unnamed
set autoread                                     "  Automatically reload changes if detected
set wildmenu                                     "  Turn on WiLd menu
set hidden                                       "  Change buffer - without saving
set history=1000                                 "  Number of things to remember in history.
set cf                                           "  Enable error files & error jumping.
set autowrite                                    "  Writes on make/shell commands
"set timeoutlen=350                              "  Time to wait for a command (after leader for example)
set timeout timeoutlen=1500 ttimeoutlen=250
set formatoptions=crql
set cpoptions+=$                                 "  add $ sign to the boundary of change command
set foldlevelstart=99                            "  Remove folds
set foldopen=block,hor,mark,percent,quickfix,tag "  what movements opens folds
set rnu                                          " relative line numbers as opposed to nu
set nu                                           " combined with rnu give hybrid rnu with current line number
set nrformats=                                   " when <C-a> or <C-x> is used on a zero padded number
                                                 " use decimal instead of octal system
set complete=.,w,b,u,U " Better complete options to speed it up

" treat $word as a word in PHP files
autocmd BufEnter *.php :set iskeyword+=\$

set cursorline
set cursorcolumn
set colorcolumn=120 " Marks n-th character in every line

let mapleader = " "

"=====================[ Text Format ]===================== {{{1
set tabstop=4
set backspace=2 " Delete everything with backspace
set shiftwidth=4 " Tabs under smart indent
set cindent
set autoindent
set smarttab
set expandtab
set backspace=2
set textwidth=120

"=====================[ Search ]===================== {{{1
set ignorecase " Case insensitive search
set smartcase " Non-case sensitive search
set incsearch " start searching as I start typing
set hlsearch " highlight search results

"=====================[ Visual ]===================== {{{1
set showmatch                                                    "  Show matching brackets.
set matchtime=2                                                  "  How many tenths of a second to blink

"=====================[ IdeaVim Plugins ]===================== {{{1
set surround " wrap command e.g. cs"'
set nerdtree " emulate nerdtree behaviour in tree view
set multiple-cursor
set ideajoin " use join feature for J 
set ideaput " native insertion in vim

" plugins that need to be installed:
set easymotion

set which-key
set timeoutlen=15000 " set which-key window timeout
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKey_ShowVimActions = "true"

"=====================[ Keybindings ]===================== {{{1

imap jj <C-c>
imap j; $;<C-c>

nmap <C-w>L <Action>(MoveEditorToOppositeTabGroup)
nmap <C-w>H <Action>(MoveEditorToOppositeTabGroup)

" split line by comma sign
map <leader>w vab:'<,'>s/[\[\(,]/\0\r/g<CR>vab:'<,'>s/[\]\)]/\r\0/g<CR>vab=]

" unimpaired mappings
nnoremap [<space> O<esc>j
nnoremap ]<space> o<esc>k
nnoremap [q <Action>(PreviousOccurence)
nnoremap ]q <Action>(NextOccurence)
nnoremap [m <Action>(MethodUp)
nnoremap ]m <Action>(MethodDown)
nnoremap [c <Action>(VcsShowPrevChangeMarker)
nnoremap ]c <Action>(VcsShowNextChangeMarker)

" built-in navigation to navigated items works better
nnoremap <c-o> <Action>(Back)
nnoremap <c-i> <Action>(Forward)
" but preserve ideavim defaults
nnoremap g<c-o> <c-o>
nnoremap g<c-i> <c-i>

" built in search looks better
nmap / <Action>(Find)

" clear the search buffer when hitting return
nnoremap <space><cr> :nohlsearch<cr>

nmap <C-w>o <Action>(CloseAllEditorsButActive)
nmap <C-w>O <Action>(HideAllWindows)

nnoremap [b :bufferNext<CR>
nnoremap [b :bufferPrevious<CR>

"map <leader>n :NERDTreeToggle<CR>
map <leader>n <Action>(SelectInProjectView)
map <leader>a <Action>(SearchEverywhere)
map <leader>ca <Action>(ShowIntentionActions)
"map <leader>cr <Action>(RenameElement)
map <leader>cr <Action>(Refactorings.QuickListPopupAction)
map <leader>cf <Action>(ReformatCode)
nmap <leader>fg <Action>(FindInPath)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
"nmap <leader>gt <Action>(GotoTest)
nmap <leader>gt <Action>(ActivateTerminalToolWindow)
nmap <leader>gs <Action>(FileStructurePopup)


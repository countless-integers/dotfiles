# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="cloud"

DOTNET_CLI_TELEMETRY_OPTOUT=1

# http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"
HISTSIZE=1000
HISTFILE=$HOME/.zsh_history
#SAVEHIST=$HISTFILE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
# don't save commands starting with a space to history
setopt hist_ignore_space
setopt hist_verify
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_find_no_dups
# when using these with autocompletions, only commands matching what's already typed are shown
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# does not work at the moment @see: https://github.com/catppuccin/zsh-syntax-highlighting/issues/6
#source ~/.zsh/themes/catppuccin_macchiato-zsh-syntax-highlighting.zsh

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  aws
  brew
  colored-man-pages
  colorize
  cp
  fzf
  fzf-tab # to turn it on and off: toggle-fzf-tab
  docker
  docker-compose
  httpie
  git
  macos
  python
  sudo
  vscode
  web-search
  yarn
  zsh-autosuggestions
  zoxide
)

# User configuration
source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
  export VISUAL='vim'
else
  export EDITOR='vim'
  export VISUAL='vim'
fi

# default mask
umask 022

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

## FZF-Tab settings
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# # set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# # set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
if command -v lsd >/dev/null 2>&1; then
  zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd -1 --color=always $realpath'
fi
# # switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

if command -v starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
else
  PROMPT='
  %{$fg_bold[grey]%}[%{$reset_color%}%{$fg_bold[${host_color}]%}%n@%m%{$reset_color%}%{$fg_bold[grey]%}]%{$reset_color%} %{$fg_bold[blue]%}%10c%{$reset_color%} $(git_prompt_info) $(git_remote_status) $(tf_prompt_info)
  %{$fg_bold[cyan]%}❯%{$reset_color%} '
fi

if command -v pyenv >/dev/null 2>&1; then
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi
export PATH="./vendor/bin:${HOME}/.composer/vendor/bin:${HOME}/bin:/usr/local/bin:/usr/local/sbin:$PATH"

export ANSIBLE_VAULT_PASSWORD_FILE=~/.ansible/vault_pass

alias tf=terraform
alias art=php artisan
alias gti=git

# @see: https://github.com/BurntSushi/ripgrep/issues/1373#issuecomment-753659388
if command -v rg >/dev/null 2>&1; then
  export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc
fi
if command -v ddgr >/dev/null 2>&1; then
  alias ddgr='ddgr -n 5'
fi
if command -v lsd >/dev/null 2>&1; then
  alias ls='lsd'
  alias lt='ls --tree'
  alias tree='ls --tree'
fi
if command -v nvim >/dev/null 2>&1; then
  alias vim='nvim'
fi

export LESS=meiX
if command -v bat >/dev/null 2>&1; then
  export PAGER=bat
elif command -v batcat >/dev/null 2>&1; then
  export PAGER=batcat
else
  export PAGER=less
fi

if command -v lazygit >/dev/null 2>&1; then
  alias lazygit='CONFIG_DIR="$HOME/.config/lazygit" lazygit'
  alias lg=lazygit
fi
